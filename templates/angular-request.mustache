var url = domain + path;
{{#isGET}}
var cached = parameters.$cache && parameters.$cache.get(url);
if(cached !== undefined && parameters.$refresh !== true) {
    deferred.resolve(cached);
    return deferred.promise;
}
{{/isGET}}
var options = {
    timeout: parameters.$timeout,
    method: '{{method}}',
    url: url,
    params: queryParameters,
{{#hasBody}}
    data: body,
{{/hasBody}}
{{#hasForm}}
    data: form,
{{/hasForm}}
    headers: headers
};
{{! I don't think this is actually needed #hasBody} }
if(typeof(body) === 'object' && !(body.constructor.name === 'Buffer')) {
    options.headers['Content-Type'] = 'application/json';
{ {/hasBody}}
{{#hasForm}}
options.headers['Content-Type'] = 'application/x-www-form-urlencoded';
options.transformRequest = {{&className}}.transformRequest;
{{/hasForm}}

$http(options).then(function(response){
    deferred.resolve(response.data);
    if(parameters.$cache !== undefined) {
        parameters.$cache.put(url, response.data, parameters.$cacheItemOpts ? parameters.$cacheItemOpts : {});
    }
}, deferred.reject);

return deferred.promise;
